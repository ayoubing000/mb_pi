package com.mycompany.myapp;


import static com.codename1.ui.CN.*;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import com.mycompany.myapp.gui.AjouterEvenement;
import com.mycompany.myapp.gui.GeofenceListenerImpl;
import com.mycompany.myapp.gui.HomeEvenement;
import com.mycompany.myapp.gui.LoginForm;
import com.mycompany.myapp.gui.detailParticipation;
import com.mycompany.myapp.gui.detailsEvenement;
import com.mycompany.myapp.gui.listEvenement;
import com.mycompany.myapp.gui.media;


/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;
    private Form hi;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme_1");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
    new LoginForm(theme).show();
    // new LoginForm(theme).show();
     /*  
    if(current != null){
            current.show();
            return;
      }
      AjouterEvenement logForm = new AjouterEvenement();
        hi = logForm.getF();
         hi.show();
    
*/

     
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
